buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'io.spring.gradle:dependency-management-plugin:1.0.11.RELEASE'
        classpath 'org.springframework.boot:spring-boot-gradle-plugin:2.6.1'

// Updating to gradle 7, means moving from this plugin to something else
        classpath 'se.transmode.gradle:gradle-docker:1.2'
    }
}

plugins {
    id 'java'
    id 'idea'
    id 'eclipse'
    id 'org.springframework.boot' version '2.6.1'
}

apply plugin: 'docker'
apply plugin: 'io.spring.dependency-management'

configurations {
    // A configuration meant for consumers that need the API of this component
    implementation {
        canBeResolved = true
    }
}

repositories {
    mavenCentral()
}

sourceCompatibility = '11'
targetCompatibility = '11'

// This affects the Docker repo name.
group = 'extender'

dependencyManagement {
    imports {
        mavenBom 'com.amazonaws:aws-java-sdk-bom:1.12.129'
    }
}

dependencies {
    implementation('org.springframework.boot:spring-boot-starter-web') {
        exclude module: 'spring-boot-starter-tomcat'
    }

    implementation('com.amazonaws:aws-java-sdk-s3:1.11.438')
    implementation('com.google.guava:guava:27.0-jre')
    implementation('com.samskivert:jmustache:1.15')
    implementation('commons-chain:commons-chain:1.2')
    implementation('commons-fileupload:commons-fileupload:1.3.3')
    implementation('commons-io:commons-io:2.11.0')
    implementation('io.micrometer:micrometer-core:1.8.1')
    implementation('org.apache.commons:commons-compress:1.21')
    implementation('org.apache.commons:commons-lang3:3.8.1')
    implementation('org.apache.httpcomponents:httpclient:4.5.13')
    implementation('org.apache.httpcomponents:httpmime:4.5.13')
    implementation('org.influxdb:influxdb-java:2.10')
    implementation('org.springframework.boot:spring-boot-starter-actuator')
    implementation('org.springframework.boot:spring-boot-starter-jetty')
    implementation('org.springframework.boot:spring-boot-starter-security')
    implementation('org.springframework.security:spring-security-test')
    implementation('io.micrometer:micrometer-core:1.8.1')
    runtime('io.micrometer:micrometer-registry-influx:1.8.1')

    testImplementation('junit:junit:4.12')
    testImplementation('org.springframework:spring-test')
    testImplementation('org.springframework.boot:spring-boot-starter-test')
    testImplementation('org.smali:dexlib2:2.2.5')
    testImplementation project(':client')
}

task createVersionFile(type:Exec) {
    commandLine 'python', 'src/main/java/com/defold/extender/version.py'
}

compileJava {
    dependsOn createVersionFile
}

// Creates the full jar file, with the extender server classes included
bootJar {
    baseName = 'extender'
    version =  '0.1.0'
}

// Builds the extender server base classes into a .jar file
jar {
    baseName = 'extender-base'
    version =  '0.1.0'
    archiveClassifier = '' // use empty string to avoid the 'plain' suffix
}

task buildDocker(type: Docker) {
    dependsOn 'build', ':manifestmergetool:mainJar'
    push = false
    applicationName = bootJar.baseName
    dockerfile = file('docker/Dockerfile')
    doFirst {
        copy {
            from(project.projectDir) {
                include "users/**"
            }
            into stageDir
        }
        copy {
            from bootJar
            into stageDir
        }
        copy {
            from project(':manifestmergetool').collect { it.tasks.withType(Jar) }
            into stageDir
        }
        copy {
            from 'docker'
            into stageDir
        }
    }
}
