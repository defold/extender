FROM ubuntu:20.04

RUN \
  apt-get update && \
  apt-get update && \
  apt-get install -y --no-install-recommends \
    wget \
    locales \
    ca-certificates \
    unzip \
    xz-utils \
    software-properties-common \
    # used in .Net setup
    file \
    # for use when debugging
    tree \
    silversearcher-ag \
    less \
    nano

#
# Java
#
ENV JAVA_HOME=/usr/local/jdk-17.0.7+7
ENV PATH=${JAVA_HOME}/bin:${PATH}

RUN locale-gen en_US.UTF-8
ENV LANG=en_US.UTF-8 \
    LANGUAGE=en_US:en \
    LC_ALL=en_US.UTF-8

RUN \
  wget -q -O - https://aka.ms/download-jdk/microsoft-jdk-17.0.7-linux-x64.tar.gz | tar xz -C /usr/local && \
  java -version && \
  javac -version

# Put all SDK's into a single folder (just as we do in the regular engine build)
ENV PLATFORMSDK_DIR=/opt/platformsdk
RUN mkdir $PLATFORMSDK_DIR

#
# ZIG
#
# https://ziglang.org/download/

ENV ZIG_VERSION=0.11.0
ENV ZIG_PATH_0_11=${PLATFORMSDK_DIR}/zig-0-11
ENV ZIG_URL=https://ziglang.org/download/${ZIG_VERSION}/zig-linux-x86_64-${ZIG_VERSION}.tar.xz
ENV PATH=${PATH}:${ZIG_PATH_0_11}

RUN \
  echo "ZIG" && \
  mkdir -p ${ZIG_PATH_0_11} && \
  wget -q -O - ${ZIG_URL} | tar xJ -C ${ZIG_PATH_0_11} --strip-components=1 && \
  zig version

#
# DOTNET
#
# https://learn.microsoft.com/en-us/dotnet/core/tools/dotnet-install-script

ENV NUGET_PACKAGES=/tmp/.nuget
ENV DOTNET_ROOT=/opt/dotnet
ENV DOTNET_VERSION_FILE=${DOTNET_ROOT}/dotnet_version
ENV DOTNET_CLI_TELEMETRY_OPTOUT=1

# Workaround for issue when running amd64 on Rosetta: https://github.com/dotnet/runtime/issues/94909
ENV DOTNET_EnableWriteXorExecute=0

# Added 1.9.1
RUN \
  mkdir -p ${DOTNET_ROOT} && \
  mkdir -p ${NUGET_PACKAGES} && \
  wget https://dot.net/v1/dotnet-install.sh -O ./dotnet-install.sh && \
  chmod +x ./dotnet-install.sh

RUN \
  ./dotnet-install.sh --channel 9.0.1xx --quality preview --install-dir ${DOTNET_ROOT} && \
  rm ./dotnet-install.sh

RUN \
  find ${DOTNET_ROOT} -iname "dotnet" && \
  file ${DOTNET_ROOT}/dotnet && \
  ${DOTNET_ROOT}/dotnet --info


RUN \
  export DOTNET_VERSION=$(${DOTNET_ROOT}/dotnet --info | grep -A 1 'Host' | grep 'Version' | awk '{print $NF}') && \
  echo ${DOTNET_VERSION} > ${DOTNET_VERSION_FILE}

# Final cleanup

RUN \
  apt-get remove -y apt-transport-https xvfb && \
  apt-get clean autoclean autoremove

RUN rm -rf /var/lib/apt/lists/lock

# Add extender user
RUN  useradd -r -u 2222 extender && \
  mkdir -p /var/extender && \
  chmod +s $(which java)

ENV MANIFEST_MERGE_TOOL=/etc/extender/apps/manifestmergetool.jar

# Extender data cache
RUN mkdir -p /var/extender/cache/data

RUN chown extender: /var/extender && \
    chown extender: $(which java) && \
    chown -R extender: /var/extender/cache && \
    chown -R extender: ${NUGET_PACKAGES} && \
    chown -R extender: ${DOTNET_ROOT}

EXPOSE 9000